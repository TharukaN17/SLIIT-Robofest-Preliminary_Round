clear all
close all
clc

vrep = remApi('remoteApi');
vrep.simxFinish(-1);
clientID = vrep.simxStart('127.0.0.1',19999, true, true, 5000,5);

%flag place coordinates

red_place=[[1.98, -2.33, 0.1, 0, 0, 0], [1.91, -2.33, 0.1, 0, 0, 0], [1.8399999999999999, -2.33, 0.1, 0, 0, 0], [1.7699999999999998, -2.33, 0.1, 0, 0, 0], [1.6999999999999997, -2.33, 0.1, 0, 0, 0], [1.63, -2.33, 0.1, 0, 0, 0], [1.5599999999999998, -2.33, 0.1, 0, 0, 0], [1.4899999999999998, -2.33, 0.1, 0, 0, 0], [1.42, -2.33, 0.1, 0, 0, 0], [1.3499999999999999, -2.33, 0.1, 0, 0, 0], [1.2799999999999998, -2.33, 0.1, 0, 0, 0], [1.2099999999999997, -2.33, 0.1, 0, 0, 0], [1.1399999999999997, -2.33, 0.1, 0, 0, 0], [1.0699999999999998, -2.33, 0.1, 0, 0, 0], [0.9999999999999998, -2.33, 0.1, 0, 0, 0], [0.9299999999999997, -2.33, 0.1, 0, 0, 0], [0.8599999999999999, -2.33, 0.1, 0, 0, 0], [0.7899999999999998, -2.33, 0.1, 0, 0, 0], [0.7199999999999998, -2.33, 0.1, 0, 0, 0], [1.98, -2.26, 0.1, 0, 0, 0], [1.8399999999999999, -2.26, 0.1, 0, 0, 0], [1.7699999999999998, -2.26, 0.1, 0, 0, 0], [1.6999999999999997, -2.26, 0.1, 0, 0, 0], [1.42, -2.26, 0.1, 0, 0, 0], [1.3499999999999999, -2.26, 0.1, 0, 0, 0], [1.2799999999999998, -2.26, 0.1, 0, 0, 0], [1.2099999999999997, -2.26, 0.1, 0, 0, 0], [1.1399999999999997, -2.26, 0.1, 0, 0, 0], [0.8599999999999999, -2.26, 0.1, 0, 0, 0], [0.7199999999999998, -2.26, 0.1, 0, 0, 0], [1.98, -2.19, 0.1, 0, 0, 0], [1.91, -2.19, 0.1, 0, 0, 0], [1.8399999999999999, -2.19, 0.1, 0, 0, 0], [1.7699999999999998, -2.19, 0.1, 0, 0, 0], [1.4899999999999998, -2.19, 0.1, 0, 0, 0], [1.3499999999999999, -2.19, 0.1, 0, 0, 0], [1.2799999999999998, -2.19, 0.1, 0, 0, 0], [1.2099999999999997, -2.19, 0.1, 0, 0, 0], [1.0699999999999998, -2.19, 0.1, 0, 0, 0], [0.9999999999999998, -2.19, 0.1, 0, 0, 0], [0.9299999999999997, -2.19, 0.1, 0, 0, 0], [0.8599999999999999, -2.19, 0.1, 0, 0, 0], [0.7899999999999998, -2.19, 0.1, 0, 0, 0], [0.7199999999999998, -2.19, 0.1, 0, 0, 0], [1.98, -2.12, 0.1, 0, 0, 0], [1.91, -2.12, 0.1, 0, 0, 0], [1.7699999999999998, -2.12, 0.1, 0, 0, 0], [1.6999999999999997, -2.12, 0.1, 0, 0, 0], [1.63, -2.12, 0.1, 0, 0, 0], [1.42, -2.12, 0.1, 0, 0, 0], [1.3499999999999999, -2.12, 0.1, 0, 0, 0], [1.2799999999999998, -2.12, 0.1, 0, 0, 0], [1.2099999999999997, -2.12, 0.1, 0, 0, 0], [1.1399999999999997, -2.12, 0.1, 0, 0, 0], [0.8599999999999999, -2.12, 0.1, 0, 0, 0], [0.7899999999999998, -2.12, 0.1, 0, 0, 0], [0.7199999999999998, -2.12, 0.1, 0, 0, 0], [1.98, -2.05, 0.1, 0, 0, 0], [1.91, -2.05, 0.1, 0, 0, 0], [1.7699999999999998, -2.05, 0.1, 0, 0, 0], [1.3499999999999999, -2.05, 0.1, 0, 0, 0], [1.2799999999999998, -2.05, 0.1, 0, 0, 0], [1.2099999999999997, -2.05, 0.1, 0, 0, 0], [1.1399999999999997, -2.05, 0.1, 0, 0, 0], [1.0699999999999998, -2.05, 0.1, 0, 0, 0], [0.9999999999999998, -2.05, 0.1, 0, 0, 0], [0.9299999999999997, -2.05, 0.1, 0, 0, 0], [0.7899999999999998, -2.05, 0.1, 0, 0, 0], [0.7199999999999998, -2.05, 0.1, 0, 0, 0], [1.98, -1.98, 0.1, 0, 0, 0], [1.91, -1.98, 0.1, 0, 0, 0], [1.7699999999999998, -1.98, 0.1, 0, 0, 0], [1.2099999999999997, -1.98, 0.1, 0, 0, 0], [0.8599999999999999, -1.98, 0.1, 0, 0, 0], [0.7899999999999998, -1.98, 0.1, 0, 0, 0], [0.7199999999999998, -1.98, 0.1, 0, 0, 0], [1.98, -1.91, 0.1, 0, 0, 0], [1.91, -1.91, 0.1, 0, 0, 0], [1.7699999999999998, -1.91, 0.1, 0, 0, 0], [1.6999999999999997, -1.91, 0.1, 0, 0, 0], [1.63, -1.91, 0.1, 0, 0, 0], [0.7899999999999998, -1.91, 0.1, 0, 0, 0], [0.7199999999999998, -1.91, 0.1, 0, 0, 0], [1.98, -1.8399999999999999, 0.1, 0, 0, 0], [1.91, -1.8399999999999999, 0.1, 0, 0, 0], [1.7699999999999998, -1.8399999999999999, 0.1, 0, 0, 0], [1.6999999999999997, -1.8399999999999999, 0.1, 0, 0, 0], [1.63, -1.8399999999999999, 0.1, 0, 0, 0], [0.7899999999999998, -1.8399999999999999, 0.1, 0, 0, 0], [0.7199999999999998, -1.8399999999999999, 0.1, 0, 0, 0], [1.98, -1.7699999999999998, 0.1, 0, 0, 0], [1.91, -1.7699999999999998, 0.1, 0, 0, 0], [1.7699999999999998, -1.7699999999999998, 0.1, 0, 0, 0], [1.6999999999999997, -1.7699999999999998, 0.1, 0, 0, 0], [1.63, -1.7699999999999998, 0.1, 0, 0, 0], [0.7899999999999998, -1.7699999999999998, 0.1, 0, 0, 0], [0.7199999999999998, -1.7699999999999998, 0.1, 0, 0, 0], [1.98, -1.6999999999999997, 0.1, 0, 0, 0], [1.7699999999999998, -1.6999999999999997, 0.1, 0, 0, 0], [1.6999999999999997, -1.6999999999999997, 0.1, 0, 0, 0], [1.63, -1.6999999999999997, 0.1, 0, 0, 0], [0.8599999999999999, -1.6999999999999997, 0.1, 0, 0, 0], [0.7899999999999998, -1.6999999999999997, 0.1, 0, 0, 0], [0.7199999999999998, -1.6999999999999997, 0.1, 0, 0, 0], [1.98, -1.63, 0.1, 0, 0, 0], [1.91, -1.63, 0.1, 0, 0, 0], [1.6999999999999997, -1.63, 0.1, 0, 0, 0], [0.7899999999999998, -1.63, 0.1, 0, 0, 0], [0.7199999999999998, -1.63, 0.1, 0, 0, 0], [1.98, -1.5599999999999998, 0.1, 0, 0, 0], [1.91, -1.5599999999999998, 0.1, 0, 0, 0], [1.7699999999999998, -1.5599999999999998, 0.1, 0, 0, 0], [1.63, -1.5599999999999998, 0.1, 0, 0, 0], [1.5599999999999998, -1.5599999999999998, 0.1, 0, 0, 0], [1.2799999999999998, -1.5599999999999998, 0.1, 0, 0, 0], [1.2099999999999997, -1.5599999999999998, 0.1, 0, 0, 0], [0.7899999999999998, -1.5599999999999998, 0.1, 0, 0, 0], [0.7199999999999998, -1.5599999999999998, 0.1, 0, 0, 0], [1.98, -1.4899999999999998, 0.1, 0, 0, 0], [1.91, -1.4899999999999998, 0.1, 0, 0, 0], [1.8399999999999999, -1.4899999999999998, 0.1, 0, 0, 0], [1.7699999999999998, -1.4899999999999998, 0.1, 0, 0, 0], [1.6999999999999997, -1.4899999999999998, 0.1, 0, 0, 0], [1.63, -1.4899999999999998, 0.1, 0, 0, 0], [1.5599999999999998, -1.4899999999999998, 0.1, 0, 0, 0], [1.4899999999999998, -1.4899999999999998, 0.1, 0, 0, 0], [1.3499999999999999, -1.4899999999999998, 0.1, 0, 0, 0], [1.2799999999999998, -1.4899999999999998, 0.1, 0, 0, 0], [1.2099999999999997, -1.4899999999999998, 0.1, 0, 0, 0], [1.0699999999999998, -1.4899999999999998, 0.1, 0, 0, 0], [0.9999999999999998, -1.4899999999999998, 0.1, 0, 0, 0], [0.7899999999999998, -1.4899999999999998, 0.1, 0, 0, 0], [0.7199999999999998, -1.4899999999999998, 0.1, 0, 0, 0], [1.98, -1.42, 0.1, 0, 0, 0], [1.91, -1.42, 0.1, 0, 0, 0], [1.8399999999999999, -1.42, 0.1, 0, 0, 0], [1.7699999999999998, -1.42, 0.1, 0, 0, 0], [1.6999999999999997, -1.42, 0.1, 0, 0, 0], [1.63, -1.42, 0.1, 0, 0, 0], [1.5599999999999998, -1.42, 0.1, 0, 0, 0], [1.4899999999999998, -1.42, 0.1, 0, 0, 0], [1.3499999999999999, -1.42, 0.1, 0, 0, 0], [1.2799999999999998, -1.42, 0.1, 0, 0, 0], [1.2099999999999997, -1.42, 0.1, 0, 0, 0], [1.0699999999999998, -1.42, 0.1, 0, 0, 0], [0.9999999999999998, -1.42, 0.1, 0, 0, 0], [0.8599999999999999, -1.42, 0.1, 0, 0, 0], [0.7899999999999998, -1.42, 0.1, 0, 0, 0], [0.7199999999999998, -1.42, 0.1, 0, 0, 0], [1.98, -1.3499999999999999, 0.1, 0, 0, 0], [1.8399999999999999, -1.3499999999999999, 0.1, 0, 0, 0], [1.7699999999999998, -1.3499999999999999, 0.1, 0, 0, 0], [1.6999999999999997, -1.3499999999999999, 0.1, 0, 0, 0], [1.63, -1.3499999999999999, 0.1, 0, 0, 0], [1.5599999999999998, -1.3499999999999999, 0.1, 0, 0, 0], [1.3499999999999999, -1.3499999999999999, 0.1, 0, 0, 0], [1.2799999999999998, -1.3499999999999999, 0.1, 0, 0, 0], [1.0699999999999998, -1.3499999999999999, 0.1, 0, 0, 0], [0.8599999999999999, -1.3499999999999999, 0.1, 0, 0, 0], [0.7199999999999998, -1.3499999999999999, 0.1, 0, 0, 0], [1.98, -1.2799999999999998, 0.1, 0, 0, 0], [1.91, -1.2799999999999998, 0.1, 0, 0, 0], [1.8399999999999999, -1.2799999999999998, 0.1, 0, 0, 0], [1.7699999999999998, -1.2799999999999998, 0.1, 0, 0, 0], [1.6999999999999997, -1.2799999999999998, 0.1, 0, 0, 0], [1.63, -1.2799999999999998, 0.1, 0, 0, 0], [1.5599999999999998, -1.2799999999999998, 0.1, 0, 0, 0], [1.4899999999999998, -1.2799999999999998, 0.1, 0, 0, 0], [1.42, -1.2799999999999998, 0.1, 0, 0, 0], [1.3499999999999999, -1.2799999999999998, 0.1, 0, 0, 0], [1.2799999999999998, -1.2799999999999998, 0.1, 0, 0, 0], [1.2099999999999997, -1.2799999999999998, 0.1, 0, 0, 0], [1.1399999999999997, -1.2799999999999998, 0.1, 0, 0, 0], [1.0699999999999998, -1.2799999999999998, 0.1, 0, 0, 0], [0.9999999999999998, -1.2799999999999998, 0.1, 0, 0, 0], [0.9299999999999997, -1.2799999999999998, 0.1, 0, 0, 0], [0.8599999999999999, -1.2799999999999998, 0.1, 0, 0, 0], [0.7899999999999998, -1.2799999999999998, 0.1, 0, 0, 0], [0.7199999999999998, -1.2799999999999998, 0.1, 0, 0, 0]];

green_place=[[2.33, -2.33, 0.1, 0, 0, 0], [2.26, -2.33, 0.1, 0, 0, 0], [2.33, -2.26, 0.1, 0, 0, 0], [2.26, -2.26, 0.1, 0, 0, 0], [2.33, -2.19, 0.1, 0, 0, 0], [2.26, -2.19, 0.1, 0, 0, 0], [2.33, -2.12, 0.1, 0, 0, 0], [2.26, -2.12, 0.1, 0, 0, 0], [2.33, -2.05, 0.1, 0, 0, 0], [2.26, -2.05, 0.1, 0, 0, 0], [2.33, -1.98, 0.1, 0, 0, 0], [2.26, -1.98, 0.1, 0, 0, 0], [2.33, -1.91, 0.1, 0, 0, 0], [2.26, -1.91, 0.1, 0, 0, 0], [2.33, -1.8399999999999999, 0.1, 0, 0, 0], [2.26, -1.8399999999999999, 0.1, 0, 0, 0], [2.33, -1.7699999999999998, 0.1, 0, 0, 0], [2.26, -1.7699999999999998, 0.1, 0, 0, 0], [2.33, -1.6999999999999997, 0.1, 0, 0, 0], [2.26, -1.6999999999999997, 0.1, 0, 0, 0], [2.33, -1.63, 0.1, 0, 0, 0], [2.26, -1.63, 0.1, 0, 0, 0], [2.33, -1.5599999999999998, 0.1, 0, 0, 0], [2.26, -1.5599999999999998, 0.1, 0, 0, 0], [2.33, -1.4899999999999998, 0.1, 0, 0, 0], [2.26, -1.4899999999999998, 0.1, 0, 0, 0], [2.33, -1.42, 0.1, 0, 0, 0], [2.26, -1.42, 0.1, 0, 0, 0], [2.33, -1.3499999999999999, 0.1, 0, 0, 0], [2.26, -1.3499999999999999, 0.1, 0, 0, 0], [2.33, -1.2799999999999998, 0.1, 0, 0, 0], [2.26, -1.2799999999999998, 0.1, 0, 0, 0]];

yellow_place=[[2.4, -2.4, 0.1, 0, 0, 0], [2.33, -2.4, 0.1, 0, 0, 0], [2.26, -2.4, 0.1, 0, 0, 0], [2.19, -2.4, 0.1, 0, 0, 0], [2.12, -2.4, 0.1, 0, 0, 0], [2.05, -2.4, 0.1, 0, 0, 0], [1.98, -2.4, 0.1, 0, 0, 0], [1.91, -2.4, 0.1, 0, 0, 0], [1.8399999999999999, -2.4, 0.1, 0, 0, 0], [1.7699999999999998, -2.4, 0.1, 0, 0, 0], [1.6999999999999997, -2.4, 0.1, 0, 0, 0], [1.63, -2.4, 0.1, 0, 0, 0], [1.5599999999999998, -2.4, 0.1, 0, 0, 0], [1.4899999999999998, -2.4, 0.1, 0, 0, 0], [1.42, -2.4, 0.1, 0, 0, 0], [1.3499999999999999, -2.4, 0.1, 0, 0, 0], [1.2799999999999998, -2.4, 0.1, 0, 0, 0], [1.2099999999999997, -2.4, 0.1, 0, 0, 0], [1.1399999999999997, -2.4, 0.1, 0, 0, 0], [1.0699999999999998, -2.4, 0.1, 0, 0, 0], [0.9999999999999998, -2.4, 0.1, 0, 0, 0], [0.9299999999999997, -2.4, 0.1, 0, 0, 0], [0.8599999999999999, -2.4, 0.1, 0, 0, 0], [0.7899999999999998, -2.4, 0.1, 0, 0, 0], [0.7199999999999998, -2.4, 0.1, 0, 0, 0], [0.6499999999999997, -2.4, 0.1, 0, 0, 0], [2.4, -2.33, 0.1, 0, 0, 0], [2.05, -2.33, 0.1, 0, 0, 0], [0.6499999999999997, -2.33, 0.1, 0, 0, 0], [2.4, -2.26, 0.1, 0, 0, 0], [2.05, -2.26, 0.1, 0, 0, 0], [1.91, -2.26, 0.1, 0, 0, 0], [1.63, -2.26, 0.1, 0, 0, 0], [1.5599999999999998, -2.26, 0.1, 0, 0, 0], [1.4899999999999998, -2.26, 0.1, 0, 0, 0], [1.0699999999999998, -2.26, 0.1, 0, 0, 0], [0.9999999999999998, -2.26, 0.1, 0, 0, 0], [0.9299999999999997, -2.26, 0.1, 0, 0, 0], [0.7899999999999998, -2.26, 0.1, 0, 0, 0], [0.6499999999999997, -2.26, 0.1, 0, 0, 0], [2.4, -2.19, 0.1, 0, 0, 0], [2.05, -2.19, 0.1, 0, 0, 0], [1.6999999999999997, -2.19, 0.1, 0, 0, 0], [1.63, -2.19, 0.1, 0, 0, 0], [1.5599999999999998, -2.19, 0.1, 0, 0, 0], [1.42, -2.19, 0.1, 0, 0, 0], [1.1399999999999997, -2.19, 0.1, 0, 0, 0], [0.6499999999999997, -2.19, 0.1, 0, 0, 0], [2.4, -2.12, 0.1, 0, 0, 0], [2.05, -2.12, 0.1, 0, 0, 0], [1.8399999999999999, -2.12, 0.1, 0, 0, 0], [1.5599999999999998, -2.12, 0.1, 0, 0, 0], [1.4899999999999998, -2.12, 0.1, 0, 0, 0], [1.0699999999999998, -2.12, 0.1, 0, 0, 0], [0.9999999999999998, -2.12, 0.1, 0, 0, 0], [0.9299999999999997, -2.12, 0.1, 0, 0, 0], [0.6499999999999997, -2.12, 0.1, 0, 0, 0], [2.4, -2.05, 0.1, 0, 0, 0], [2.05, -2.05, 0.1, 0, 0, 0], [1.8399999999999999, -2.05, 0.1, 0, 0, 0], [1.6999999999999997, -2.05, 0.1, 0, 0, 0], [1.63, -2.05, 0.1, 0, 0, 0], [1.5599999999999998, -2.05, 0.1, 0, 0, 0], [1.4899999999999998, -2.05, 0.1, 0, 0, 0], [1.42, -2.05, 0.1, 0, 0, 0], [0.8599999999999999, -2.05, 0.1, 0, 0, 0], [0.6499999999999997, -2.05, 0.1, 0, 0, 0], [2.4, -1.98, 0.1, 0, 0, 0], [2.05, -1.98, 0.1, 0, 0, 0], [1.8399999999999999, -1.98, 0.1, 0, 0, 0], [1.6999999999999997, -1.98, 0.1, 0, 0, 0], [1.63, -1.98, 0.1, 0, 0, 0], [1.5599999999999998, -1.98, 0.1, 0, 0, 0], [1.4899999999999998, -1.98, 0.1, 0, 0, 0], [1.42, -1.98, 0.1, 0, 0, 0], [1.3499999999999999, -1.98, 0.1, 0, 0, 0], [1.2799999999999998, -1.98, 0.1, 0, 0, 0], [1.1399999999999997, -1.98, 0.1, 0, 0, 0], [1.0699999999999998, -1.98, 0.1, 0, 0, 0], [0.9999999999999998, -1.98, 0.1, 0, 0, 0], [0.9299999999999997, -1.98, 0.1, 0, 0, 0], [0.6499999999999997, -1.98, 0.1, 0, 0, 0], [2.4, -1.91, 0.1, 0, 0, 0], [2.05, -1.91, 0.1, 0, 0, 0], [1.8399999999999999, -1.91, 0.1, 0, 0, 0], [1.5599999999999998, -1.91, 0.1, 0, 0, 0], [1.4899999999999998, -1.91, 0.1, 0, 0, 0], [1.42, -1.91, 0.1, 0, 0, 0], [1.3499999999999999, -1.91, 0.1, 0, 0, 0], [1.2799999999999998, -1.91, 0.1, 0, 0, 0], [1.2099999999999997, -1.91, 0.1, 0, 0, 0], [1.1399999999999997, -1.91, 0.1, 0, 0, 0], [1.0699999999999998, -1.91, 0.1, 0, 0, 0], [0.9999999999999998, -1.91, 0.1, 0, 0, 0], [0.9299999999999997, -1.91, 0.1, 0, 0, 0], [0.8599999999999999, -1.91, 0.1, 0, 0, 0], [0.6499999999999997, -1.91, 0.1, 0, 0, 0], [2.4, -1.8399999999999999, 0.1, 0, 0, 0], [2.05, -1.8399999999999999, 0.1, 0, 0, 0], [1.8399999999999999, -1.8399999999999999, 0.1, 0, 0, 0], [1.5599999999999998, -1.8399999999999999, 0.1, 0, 0, 0], [1.4899999999999998, -1.8399999999999999, 0.1, 0, 0, 0], [1.42, -1.8399999999999999, 0.1, 0, 0, 0], [1.3499999999999999, -1.8399999999999999, 0.1, 0, 0, 0], [1.2799999999999998, -1.8399999999999999, 0.1, 0, 0, 0], [1.2099999999999997, -1.8399999999999999, 0.1, 0, 0, 0], [1.1399999999999997, -1.8399999999999999, 0.1, 0, 0, 0], [1.0699999999999998, -1.8399999999999999, 0.1, 0, 0, 0], [0.9999999999999998, -1.8399999999999999, 0.1, 0, 0, 0], [0.9299999999999997, -1.8399999999999999, 0.1, 0, 0, 0], [0.8599999999999999, -1.8399999999999999, 0.1, 0, 0, 0], [0.6499999999999997, -1.8399999999999999, 0.1, 0, 0, 0], [2.4, -1.7699999999999998, 0.1, 0, 0, 0], [2.05, -1.7699999999999998, 0.1, 0, 0, 0], [1.8399999999999999, -1.7699999999999998, 0.1, 0, 0, 0], [1.5599999999999998, -1.7699999999999998, 0.1, 0, 0, 0], [1.4899999999999998, -1.7699999999999998, 0.1, 0, 0, 0], [1.42, -1.7699999999999998, 0.1, 0, 0, 0], [1.3499999999999999, -1.7699999999999998, 0.1, 0, 0, 0], [1.2799999999999998, -1.7699999999999998, 0.1, 0, 0, 0], [1.2099999999999997, -1.7699999999999998, 0.1, 0, 0, 0], [1.1399999999999997, -1.7699999999999998, 0.1, 0, 0, 0], [1.0699999999999998, -1.7699999999999998, 0.1, 0, 0, 0], [0.9999999999999998, -1.7699999999999998, 0.1, 0, 0, 0], [0.9299999999999997, -1.7699999999999998, 0.1, 0, 0, 0], [0.8599999999999999, -1.7699999999999998, 0.1, 0, 0, 0], [0.6499999999999997, -1.7699999999999998, 0.1, 0, 0, 0], [2.4, -1.6999999999999997, 0.1, 0, 0, 0], [2.05, -1.6999999999999997, 0.1, 0, 0, 0], [1.91, -1.6999999999999997, 0.1, 0, 0, 0], [1.8399999999999999, -1.6999999999999997, 0.1, 0, 0, 0], [1.5599999999999998, -1.6999999999999997, 0.1, 0, 0, 0], [1.4899999999999998, -1.6999999999999997, 0.1, 0, 0, 0], [1.42, -1.6999999999999997, 0.1, 0, 0, 0], [1.3499999999999999, -1.6999999999999997, 0.1, 0, 0, 0], [1.2799999999999998, -1.6999999999999997, 0.1, 0, 0, 0], [1.2099999999999997, -1.6999999999999997, 0.1, 0, 0, 0], [1.1399999999999997, -1.6999999999999997, 0.1, 0, 0, 0], [1.0699999999999998, -1.6999999999999997, 0.1, 0, 0, 0], [0.9999999999999998, -1.6999999999999997, 0.1, 0, 0, 0], [0.9299999999999997, -1.6999999999999997, 0.1, 0, 0, 0], [0.6499999999999997, -1.6999999999999997, 0.1, 0, 0, 0], [2.4, -1.63, 0.1, 0, 0, 0], [2.05, -1.63, 0.1, 0, 0, 0], [1.8399999999999999, -1.63, 0.1, 0, 0, 0], [1.7699999999999998, -1.63, 0.1, 0, 0, 0], [1.63, -1.63, 0.1, 0, 0, 0], [1.5599999999999998, -1.63, 0.1, 0, 0, 0], [1.4899999999999998, -1.63, 0.1, 0, 0, 0], [1.42, -1.63, 0.1, 0, 0, 0], [1.3499999999999999, -1.63, 0.1, 0, 0, 0], [1.2799999999999998, -1.63, 0.1, 0, 0, 0], [1.2099999999999997, -1.63, 0.1, 0, 0, 0], [1.1399999999999997, -1.63, 0.1, 0, 0, 0], [1.0699999999999998, -1.63, 0.1, 0, 0, 0], [0.9999999999999998, -1.63, 0.1, 0, 0, 0], [0.9299999999999997, -1.63, 0.1, 0, 0, 0], [0.8599999999999999, -1.63, 0.1, 0, 0, 0], [0.6499999999999997, -1.63, 0.1, 0, 0, 0], [2.4, -1.5599999999999998, 0.1, 0, 0, 0], [2.05, -1.5599999999999998, 0.1, 0, 0, 0], [1.8399999999999999, -1.5599999999999998, 0.1, 0, 0, 0], [1.6999999999999997, -1.5599999999999998, 0.1, 0, 0, 0], [1.4899999999999998, -1.5599999999999998, 0.1, 0, 0, 0], [1.42, -1.5599999999999998, 0.1, 0, 0, 0], [1.3499999999999999, -1.5599999999999998, 0.1, 0, 0, 0], [1.1399999999999997, -1.5599999999999998, 0.1, 0, 0, 0], [1.0699999999999998, -1.5599999999999998, 0.1, 0, 0, 0], [0.9999999999999998, -1.5599999999999998, 0.1, 0, 0, 0], [0.9299999999999997, -1.5599999999999998, 0.1, 0, 0, 0], [0.8599999999999999, -1.5599999999999998, 0.1, 0, 0, 0], [0.6499999999999997, -1.5599999999999998, 0.1, 0, 0, 0], [2.4, -1.4899999999999998, 0.1, 0, 0, 0], [2.05, -1.4899999999999998, 0.1, 0, 0, 0], [1.42, -1.4899999999999998, 0.1, 0, 0, 0], [1.1399999999999997, -1.4899999999999998, 0.1, 0, 0, 0], [0.9299999999999997, -1.4899999999999998, 0.1, 0, 0, 0], [0.8599999999999999, -1.4899999999999998, 0.1, 0, 0, 0], [0.6499999999999997, -1.4899999999999998, 0.1, 0, 0, 0], [2.4, -1.42, 0.1, 0, 0, 0], [2.05, -1.42, 0.1, 0, 0, 0], [1.42, -1.42, 0.1, 0, 0, 0], [1.1399999999999997, -1.42, 0.1, 0, 0, 0], [0.9299999999999997, -1.42, 0.1, 0, 0, 0], [0.6499999999999997, -1.42, 0.1, 0, 0, 0], [2.4, -1.3499999999999999, 0.1, 0, 0, 0], [2.05, -1.3499999999999999, 0.1, 0, 0, 0], [1.91, -1.3499999999999999, 0.1, 0, 0, 0], [1.4899999999999998, -1.3499999999999999, 0.1, 0, 0, 0], [1.42, -1.3499999999999999, 0.1, 0, 0, 0], [1.2099999999999997, -1.3499999999999999, 0.1, 0, 0, 0], [1.1399999999999997, -1.3499999999999999, 0.1, 0, 0, 0], [0.9999999999999998, -1.3499999999999999, 0.1, 0, 0, 0], [0.9299999999999997, -1.3499999999999999, 0.1, 0, 0, 0], [0.7899999999999998, -1.3499999999999999, 0.1, 0, 0, 0], [0.6499999999999997, -1.3499999999999999, 0.1, 0, 0, 0], [2.4, -1.2799999999999998, 0.1, 0, 0, 0], [2.05, -1.2799999999999998, 0.1, 0, 0, 0], [0.6499999999999997, -1.2799999999999998, 0.1, 0, 0, 0], [2.4, -1.2099999999999997, 0.1, 0, 0, 0], [2.33, -1.2099999999999997, 0.1, 0, 0, 0], [2.26, -1.2099999999999997, 0.1, 0, 0, 0], [2.19, -1.2099999999999997, 0.1, 0, 0, 0], [2.12, -1.2099999999999997, 0.1, 0, 0, 0], [2.05, -1.2099999999999997, 0.1, 0, 0, 0], [1.98, -1.2099999999999997, 0.1, 0, 0, 0], [1.91, -1.2099999999999997, 0.1, 0, 0, 0], [1.8399999999999999, -1.2099999999999997, 0.1, 0, 0, 0], [1.7699999999999998, -1.2099999999999997, 0.1, 0, 0, 0], [1.6999999999999997, -1.2099999999999997, 0.1, 0, 0, 0], [1.63, -1.2099999999999997, 0.1, 0, 0, 0], [1.5599999999999998, -1.2099999999999997, 0.1, 0, 0, 0], [1.4899999999999998, -1.2099999999999997, 0.1, 0, 0, 0], [1.42, -1.2099999999999997, 0.1, 0, 0, 0], [1.3499999999999999, -1.2099999999999997, 0.1, 0, 0, 0], [1.2799999999999998, -1.2099999999999997, 0.1, 0, 0, 0], [1.2099999999999997, -1.2099999999999997, 0.1, 0, 0, 0], [1.1399999999999997, -1.2099999999999997, 0.1, 0, 0, 0], [1.0699999999999998, -1.2099999999999997, 0.1, 0, 0, 0], [0.9999999999999998, -1.2099999999999997, 0.1, 0, 0, 0], [0.9299999999999997, -1.2099999999999997, 0.1, 0, 0, 0], [0.8599999999999999, -1.2099999999999997, 0.1, 0, 0, 0], [0.7899999999999998, -1.2099999999999997, 0.1, 0, 0, 0], [0.7199999999999998, -1.2099999999999997, 0.1, 0, 0, 0], [0.6499999999999997, -1.2099999999999997, 0.1, 0, 0, 0]];

orange_place=[[2.19, -2.33, 0.1, 0, 0, 0], [2.12, -2.33, 0.1, 0, 0, 0], [2.19, -2.26, 0.1, 0, 0, 0], [2.12, -2.26, 0.1, 0, 0, 0], [2.19, -2.19, 0.1, 0, 0, 0], [2.12, -2.19, 0.1, 0, 0, 0], [2.19, -2.12, 0.1, 0, 0, 0], [2.12, -2.12, 0.1, 0, 0, 0], [2.19, -2.05, 0.1, 0, 0, 0], [2.12, -2.05, 0.1, 0, 0, 0], [2.19, -1.98, 0.1, 0, 0, 0], [2.12, -1.98, 0.1, 0, 0, 0], [2.19, -1.91, 0.1, 0, 0, 0], [2.12, -1.91, 0.1, 0, 0, 0], [2.19, -1.8399999999999999, 0.1, 0, 0, 0], [2.12, -1.8399999999999999, 0.1, 0, 0, 0], [2.19, -1.7699999999999998, 0.1, 0, 0, 0], [2.12, -1.7699999999999998, 0.1, 0, 0, 0], [2.19, -1.6999999999999997, 0.1, 0, 0, 0], [2.12, -1.6999999999999997, 0.1, 0, 0, 0], [2.19, -1.63, 0.1, 0, 0, 0], [2.12, -1.63, 0.1, 0, 0, 0], [2.19, -1.5599999999999998, 0.1, 0, 0, 0], [2.12, -1.5599999999999998, 0.1, 0, 0, 0], [2.19, -1.4899999999999998, 0.1, 0, 0, 0], [2.12, -1.4899999999999998, 0.1, 0, 0, 0], [2.19, -1.42, 0.1, 0, 0, 0], [2.12, -1.42, 0.1, 0, 0, 0], [2.19, -1.3499999999999999, 0.1, 0, 0, 0], [2.12, -1.3499999999999999, 0.1, 0, 0, 0], [2.19, -1.2799999999999998, 0.1, 0, 0, 0], [2.12, -1.2799999999999998, 0.1, 0, 0, 0]];

%flag above coordinates

red_above=[[1.98, -2.33, 0.3, 0, 0, 0], [1.91, -2.33, 0.3, 0, 0, 0], [1.8399999999999999, -2.33, 0.3, 0, 0, 0], [1.7699999999999998, -2.33, 0.3, 0, 0, 0], [1.6999999999999997, -2.33, 0.3, 0, 0, 0], [1.63, -2.33, 0.3, 0, 0, 0], [1.5599999999999998, -2.33, 0.3, 0, 0, 0], [1.4899999999999998, -2.33, 0.3, 0, 0, 0], [1.42, -2.33, 0.3, 0, 0, 0], [1.3499999999999999, -2.33, 0.3, 0, 0, 0], [1.2799999999999998, -2.33, 0.3, 0, 0, 0], [1.2099999999999997, -2.33, 0.3, 0, 0, 0], [1.1399999999999997, -2.33, 0.3, 0, 0, 0], [1.0699999999999998, -2.33, 0.3, 0, 0, 0], [0.9999999999999998, -2.33, 0.3, 0, 0, 0], [0.9299999999999997, -2.33, 0.3, 0, 0, 0], [0.8599999999999999, -2.33, 0.3, 0, 0, 0], [0.7899999999999998, -2.33, 0.3, 0, 0, 0], [0.7199999999999998, -2.33, 0.3, 0, 0, 0], [1.98, -2.26, 0.3, 0, 0, 0], [1.8399999999999999, -2.26, 0.3, 0, 0, 0], [1.7699999999999998, -2.26, 0.3, 0, 0, 0], [1.6999999999999997, -2.26, 0.3, 0, 0, 0], [1.42, -2.26, 0.3, 0, 0, 0], [1.3499999999999999, -2.26, 0.3, 0, 0, 0], [1.2799999999999998, -2.26, 0.3, 0, 0, 0], [1.2099999999999997, -2.26, 0.3, 0, 0, 0], [1.1399999999999997, -2.26, 0.3, 0, 0, 0], [0.8599999999999999, -2.26, 0.3, 0, 0, 0], [0.7199999999999998, -2.26, 0.3, 0, 0, 0], [1.98, -2.19, 0.3, 0, 0, 0], [1.91, -2.19, 0.3, 0, 0, 0], [1.8399999999999999, -2.19, 0.3, 0, 0, 0], [1.7699999999999998, -2.19, 0.3, 0, 0, 0], [1.4899999999999998, -2.19, 0.3, 0, 0, 0], [1.3499999999999999, -2.19, 0.3, 0, 0, 0], [1.2799999999999998, -2.19, 0.3, 0, 0, 0], [1.2099999999999997, -2.19, 0.3, 0, 0, 0], [1.0699999999999998, -2.19, 0.3, 0, 0, 0], [0.9999999999999998, -2.19, 0.3, 0, 0, 0], [0.9299999999999997, -2.19, 0.3, 0, 0, 0], [0.8599999999999999, -2.19, 0.3, 0, 0, 0], [0.7899999999999998, -2.19, 0.3, 0, 0, 0], [0.7199999999999998, -2.19, 0.3, 0, 0, 0], [1.98, -2.12, 0.3, 0, 0, 0], [1.91, -2.12, 0.3, 0, 0, 0], [1.7699999999999998, -2.12, 0.3, 0, 0, 0], [1.6999999999999997, -2.12, 0.3, 0, 0, 0], [1.63, -2.12, 0.3, 0, 0, 0], [1.42, -2.12, 0.3, 0, 0, 0], [1.3499999999999999, -2.12, 0.3, 0, 0, 0], [1.2799999999999998, -2.12, 0.3, 0, 0, 0], [1.2099999999999997, -2.12, 0.3, 0, 0, 0], [1.1399999999999997, -2.12, 0.3, 0, 0, 0], [0.8599999999999999, -2.12, 0.3, 0, 0, 0], [0.7899999999999998, -2.12, 0.3, 0, 0, 0], [0.7199999999999998, -2.12, 0.3, 0, 0, 0], [1.98, -2.05, 0.3, 0, 0, 0], [1.91, -2.05, 0.3, 0, 0, 0], [1.7699999999999998, -2.05, 0.3, 0, 0, 0], [1.3499999999999999, -2.05, 0.3, 0, 0, 0], [1.2799999999999998, -2.05, 0.3, 0, 0, 0], [1.2099999999999997, -2.05, 0.3, 0, 0, 0], [1.1399999999999997, -2.05, 0.3, 0, 0, 0], [1.0699999999999998, -2.05, 0.3, 0, 0, 0], [0.9999999999999998, -2.05, 0.3, 0, 0, 0], [0.9299999999999997, -2.05, 0.3, 0, 0, 0], [0.7899999999999998, -2.05, 0.3, 0, 0, 0], [0.7199999999999998, -2.05, 0.3, 0, 0, 0], [1.98, -1.98, 0.3, 0, 0, 0], [1.91, -1.98, 0.3, 0, 0, 0], [1.7699999999999998, -1.98, 0.3, 0, 0, 0], [1.2099999999999997, -1.98, 0.3, 0, 0, 0], [0.8599999999999999, -1.98, 0.3, 0, 0, 0], [0.7899999999999998, -1.98, 0.3, 0, 0, 0], [0.7199999999999998, -1.98, 0.3, 0, 0, 0], [1.98, -1.91, 0.3, 0, 0, 0], [1.91, -1.91, 0.3, 0, 0, 0], [1.7699999999999998, -1.91, 0.3, 0, 0, 0], [1.6999999999999997, -1.91, 0.3, 0, 0, 0], [1.63, -1.91, 0.3, 0, 0, 0], [0.7899999999999998, -1.91, 0.3, 0, 0, 0], [0.7199999999999998, -1.91, 0.3, 0, 0, 0], [1.98, -1.8399999999999999, 0.3, 0, 0, 0], [1.91, -1.8399999999999999, 0.3, 0, 0, 0], [1.7699999999999998, -1.8399999999999999, 0.3, 0, 0, 0], [1.6999999999999997, -1.8399999999999999, 0.3, 0, 0, 0], [1.63, -1.8399999999999999, 0.3, 0, 0, 0], [0.7899999999999998, -1.8399999999999999, 0.3, 0, 0, 0], [0.7199999999999998, -1.8399999999999999, 0.3, 0, 0, 0], [1.98, -1.7699999999999998, 0.3, 0, 0, 0], [1.91, -1.7699999999999998, 0.3, 0, 0, 0], [1.7699999999999998, -1.7699999999999998, 0.3, 0, 0, 0], [1.6999999999999997, -1.7699999999999998, 0.3, 0, 0, 0], [1.63, -1.7699999999999998, 0.3, 0, 0, 0], [0.7899999999999998, -1.7699999999999998, 0.3, 0, 0, 0], [0.7199999999999998, -1.7699999999999998, 0.3, 0, 0, 0], [1.98, -1.6999999999999997, 0.3, 0, 0, 0], [1.7699999999999998, -1.6999999999999997, 0.3, 0, 0, 0], [1.6999999999999997, -1.6999999999999997, 0.3, 0, 0, 0], [1.63, -1.6999999999999997, 0.3, 0, 0, 0], [0.8599999999999999, -1.6999999999999997, 0.3, 0, 0, 0], [0.7899999999999998, -1.6999999999999997, 0.3, 0, 0, 0], [0.7199999999999998, -1.6999999999999997, 0.3, 0, 0, 0], [1.98, -1.63, 0.3, 0, 0, 0], [1.91, -1.63, 0.3, 0, 0, 0], [1.6999999999999997, -1.63, 0.3, 0, 0, 0], [0.7899999999999998, -1.63, 0.3, 0, 0, 0], [0.7199999999999998, -1.63, 0.3, 0, 0, 0], [1.98, -1.5599999999999998, 0.3, 0, 0, 0], [1.91, -1.5599999999999998, 0.3, 0, 0, 0], [1.7699999999999998, -1.5599999999999998, 0.3, 0, 0, 0], [1.63, -1.5599999999999998, 0.3, 0, 0, 0], [1.5599999999999998, -1.5599999999999998, 0.3, 0, 0, 0], [1.2799999999999998, -1.5599999999999998, 0.3, 0, 0, 0], [1.2099999999999997, -1.5599999999999998, 0.3, 0, 0, 0], [0.7899999999999998, -1.5599999999999998, 0.3, 0, 0, 0], [0.7199999999999998, -1.5599999999999998, 0.3, 0, 0, 0], [1.98, -1.4899999999999998, 0.3, 0, 0, 0], [1.91, -1.4899999999999998, 0.3, 0, 0, 0], [1.8399999999999999, -1.4899999999999998, 0.3, 0, 0, 0], [1.7699999999999998, -1.4899999999999998, 0.3, 0, 0, 0], [1.6999999999999997, -1.4899999999999998, 0.3, 0, 0, 0], [1.63, -1.4899999999999998, 0.3, 0, 0, 0], [1.5599999999999998, -1.4899999999999998, 0.3, 0, 0, 0], [1.4899999999999998, -1.4899999999999998, 0.3, 0, 0, 0], [1.3499999999999999, -1.4899999999999998, 0.3, 0, 0, 0], [1.2799999999999998, -1.4899999999999998, 0.3, 0, 0, 0], [1.2099999999999997, -1.4899999999999998, 0.3, 0, 0, 0], [1.0699999999999998, -1.4899999999999998, 0.3, 0, 0, 0], [0.9999999999999998, -1.4899999999999998, 0.3, 0, 0, 0], [0.7899999999999998, -1.4899999999999998, 0.3, 0, 0, 0], [0.7199999999999998, -1.4899999999999998, 0.3, 0, 0, 0], [1.98, -1.42, 0.3, 0, 0, 0], [1.91, -1.42, 0.3, 0, 0, 0], [1.8399999999999999, -1.42, 0.3, 0, 0, 0], [1.7699999999999998, -1.42, 0.3, 0, 0, 0], [1.6999999999999997, -1.42, 0.3, 0, 0, 0], [1.63, -1.42, 0.3, 0, 0, 0], [1.5599999999999998, -1.42, 0.3, 0, 0, 0], [1.4899999999999998, -1.42, 0.3, 0, 0, 0], [1.3499999999999999, -1.42, 0.3, 0, 0, 0], [1.2799999999999998, -1.42, 0.3, 0, 0, 0], [1.2099999999999997, -1.42, 0.3, 0, 0, 0], [1.0699999999999998, -1.42, 0.3, 0, 0, 0], [0.9999999999999998, -1.42, 0.3, 0, 0, 0], [0.8599999999999999, -1.42, 0.3, 0, 0, 0], [0.7899999999999998, -1.42, 0.3, 0, 0, 0], [0.7199999999999998, -1.42, 0.3, 0, 0, 0], [1.98, -1.3499999999999999, 0.3, 0, 0, 0], [1.8399999999999999, -1.3499999999999999, 0.3, 0, 0, 0], [1.7699999999999998, -1.3499999999999999, 0.3, 0, 0, 0], [1.6999999999999997, -1.3499999999999999, 0.3, 0, 0, 0], [1.63, -1.3499999999999999, 0.3, 0, 0, 0], [1.5599999999999998, -1.3499999999999999, 0.3, 0, 0, 0], [1.3499999999999999, -1.3499999999999999, 0.3, 0, 0, 0], [1.2799999999999998, -1.3499999999999999, 0.3, 0, 0, 0], [1.0699999999999998, -1.3499999999999999, 0.3, 0, 0, 0], [0.8599999999999999, -1.3499999999999999, 0.3, 0, 0, 0], [0.7199999999999998, -1.3499999999999999, 0.3, 0, 0, 0], [1.98, -1.2799999999999998, 0.3, 0, 0, 0], [1.91, -1.2799999999999998, 0.3, 0, 0, 0], [1.8399999999999999, -1.2799999999999998, 0.3, 0, 0, 0], [1.7699999999999998, -1.2799999999999998, 0.3, 0, 0, 0], [1.6999999999999997, -1.2799999999999998, 0.3, 0, 0, 0], [1.63, -1.2799999999999998, 0.3, 0, 0, 0], [1.5599999999999998, -1.2799999999999998, 0.3, 0, 0, 0], [1.4899999999999998, -1.2799999999999998, 0.3, 0, 0, 0], [1.42, -1.2799999999999998, 0.3, 0, 0, 0], [1.3499999999999999, -1.2799999999999998, 0.3, 0, 0, 0], [1.2799999999999998, -1.2799999999999998, 0.3, 0, 0, 0], [1.2099999999999997, -1.2799999999999998, 0.3, 0, 0, 0], [1.1399999999999997, -1.2799999999999998, 0.3, 0, 0, 0], [1.0699999999999998, -1.2799999999999998, 0.3, 0, 0, 0], [0.9999999999999998, -1.2799999999999998, 0.3, 0, 0, 0], [0.9299999999999997, -1.2799999999999998, 0.3, 0, 0, 0], [0.8599999999999999, -1.2799999999999998, 0.3, 0, 0, 0], [0.7899999999999998, -1.2799999999999998, 0.3, 0, 0, 0], [0.7199999999999998, -1.2799999999999998, 0.3, 0, 0, 0]];

green_above=[[2.33, -2.33, 0.3, 0, 0, 0], [2.26, -2.33, 0.3, 0, 0, 0], [2.33, -2.26, 0.3, 0, 0, 0], [2.26, -2.26, 0.3, 0, 0, 0], [2.33, -2.19, 0.3, 0, 0, 0], [2.26, -2.19, 0.3, 0, 0, 0], [2.33, -2.12, 0.3, 0, 0, 0], [2.26, -2.12, 0.3, 0, 0, 0], [2.33, -2.05, 0.3, 0, 0, 0], [2.26, -2.05, 0.3, 0, 0, 0], [2.33, -1.98, 0.3, 0, 0, 0], [2.26, -1.98, 0.3, 0, 0, 0], [2.33, -1.91, 0.3, 0, 0, 0], [2.26, -1.91, 0.3, 0, 0, 0], [2.33, -1.8399999999999999, 0.3, 0, 0, 0], [2.26, -1.8399999999999999, 0.3, 0, 0, 0], [2.33, -1.7699999999999998, 0.3, 0, 0, 0], [2.26, -1.7699999999999998, 0.3, 0, 0, 0], [2.33, -1.6999999999999997, 0.3, 0, 0, 0], [2.26, -1.6999999999999997, 0.3, 0, 0, 0], [2.33, -1.63, 0.3, 0, 0, 0], [2.26, -1.63, 0.3, 0, 0, 0], [2.33, -1.5599999999999998, 0.3, 0, 0, 0], [2.26, -1.5599999999999998, 0.3, 0, 0, 0], [2.33, -1.4899999999999998, 0.3, 0, 0, 0], [2.26, -1.4899999999999998, 0.3, 0, 0, 0], [2.33, -1.42, 0.3, 0, 0, 0], [2.26, -1.42, 0.3, 0, 0, 0], [2.33, -1.3499999999999999, 0.3, 0, 0, 0], [2.26, -1.3499999999999999, 0.3, 0, 0, 0], [2.33, -1.2799999999999998, 0.3, 0, 0, 0], [2.26, -1.2799999999999998, 0.3, 0, 0, 0]];

yellow_above=[[2.4, -2.4, 0.3, 0, 0, 0], [2.33, -2.4, 0.3, 0, 0, 0], [2.26, -2.4, 0.3, 0, 0, 0], [2.19, -2.4, 0.3, 0, 0, 0], [2.12, -2.4, 0.3, 0, 0, 0], [2.05, -2.4, 0.3, 0, 0, 0], [1.98, -2.4, 0.3, 0, 0, 0], [1.91, -2.4, 0.3, 0, 0, 0], [1.8399999999999999, -2.4, 0.3, 0, 0, 0], [1.7699999999999998, -2.4, 0.3, 0, 0, 0], [1.6999999999999997, -2.4, 0.3, 0, 0, 0], [1.63, -2.4, 0.3, 0, 0, 0], [1.5599999999999998, -2.4, 0.3, 0, 0, 0], [1.4899999999999998, -2.4, 0.3, 0, 0, 0], [1.42, -2.4, 0.3, 0, 0, 0], [1.3499999999999999, -2.4, 0.3, 0, 0, 0], [1.2799999999999998, -2.4, 0.3, 0, 0, 0], [1.2099999999999997, -2.4, 0.3, 0, 0, 0], [1.1399999999999997, -2.4, 0.3, 0, 0, 0], [1.0699999999999998, -2.4, 0.3, 0, 0, 0], [0.9999999999999998, -2.4, 0.3, 0, 0, 0], [0.9299999999999997, -2.4, 0.3, 0, 0, 0], [0.8599999999999999, -2.4, 0.3, 0, 0, 0], [0.7899999999999998, -2.4, 0.3, 0, 0, 0], [0.7199999999999998, -2.4, 0.3, 0, 0, 0], [0.6499999999999997, -2.4, 0.3, 0, 0, 0], [2.4, -2.33, 0.3, 0, 0, 0], [2.05, -2.33, 0.3, 0, 0, 0], [0.6499999999999997, -2.33, 0.3, 0, 0, 0], [2.4, -2.26, 0.3, 0, 0, 0], [2.05, -2.26, 0.3, 0, 0, 0], [1.91, -2.26, 0.3, 0, 0, 0], [1.63, -2.26, 0.3, 0, 0, 0], [1.5599999999999998, -2.26, 0.3, 0, 0, 0], [1.4899999999999998, -2.26, 0.3, 0, 0, 0], [1.0699999999999998, -2.26, 0.3, 0, 0, 0], [0.9999999999999998, -2.26, 0.3, 0, 0, 0], [0.9299999999999997, -2.26, 0.3, 0, 0, 0], [0.7899999999999998, -2.26, 0.3, 0, 0, 0], [0.6499999999999997, -2.26, 0.3, 0, 0, 0], [2.4, -2.19, 0.3, 0, 0, 0], [2.05, -2.19, 0.3, 0, 0, 0], [1.6999999999999997, -2.19, 0.3, 0, 0, 0], [1.63, -2.19, 0.3, 0, 0, 0], [1.5599999999999998, -2.19, 0.3, 0, 0, 0], [1.42, -2.19, 0.3, 0, 0, 0], [1.1399999999999997, -2.19, 0.3, 0, 0, 0], [0.6499999999999997, -2.19, 0.3, 0, 0, 0], [2.4, -2.12, 0.3, 0, 0, 0], [2.05, -2.12, 0.3, 0, 0, 0], [1.8399999999999999, -2.12, 0.3, 0, 0, 0], [1.5599999999999998, -2.12, 0.3, 0, 0, 0], [1.4899999999999998, -2.12, 0.3, 0, 0, 0], [1.0699999999999998, -2.12, 0.3, 0, 0, 0], [0.9999999999999998, -2.12, 0.3, 0, 0, 0], [0.9299999999999997, -2.12, 0.3, 0, 0, 0], [0.6499999999999997, -2.12, 0.3, 0, 0, 0], [2.4, -2.05, 0.3, 0, 0, 0], [2.05, -2.05, 0.3, 0, 0, 0], [1.8399999999999999, -2.05, 0.3, 0, 0, 0], [1.6999999999999997, -2.05, 0.3, 0, 0, 0], [1.63, -2.05, 0.3, 0, 0, 0], [1.5599999999999998, -2.05, 0.3, 0, 0, 0], [1.4899999999999998, -2.05, 0.3, 0, 0, 0], [1.42, -2.05, 0.3, 0, 0, 0], [0.8599999999999999, -2.05, 0.3, 0, 0, 0], [0.6499999999999997, -2.05, 0.3, 0, 0, 0], [2.4, -1.98, 0.3, 0, 0, 0], [2.05, -1.98, 0.3, 0, 0, 0], [1.8399999999999999, -1.98, 0.3, 0, 0, 0], [1.6999999999999997, -1.98, 0.3, 0, 0, 0], [1.63, -1.98, 0.3, 0, 0, 0], [1.5599999999999998, -1.98, 0.3, 0, 0, 0], [1.4899999999999998, -1.98, 0.3, 0, 0, 0], [1.42, -1.98, 0.3, 0, 0, 0], [1.3499999999999999, -1.98, 0.3, 0, 0, 0], [1.2799999999999998, -1.98, 0.3, 0, 0, 0], [1.1399999999999997, -1.98, 0.3, 0, 0, 0], [1.0699999999999998, -1.98, 0.3, 0, 0, 0], [0.9999999999999998, -1.98, 0.3, 0, 0, 0], [0.9299999999999997, -1.98, 0.3, 0, 0, 0], [0.6499999999999997, -1.98, 0.3, 0, 0, 0], [2.4, -1.91, 0.3, 0, 0, 0], [2.05, -1.91, 0.3, 0, 0, 0], [1.8399999999999999, -1.91, 0.3, 0, 0, 0], [1.5599999999999998, -1.91, 0.3, 0, 0, 0], [1.4899999999999998, -1.91, 0.3, 0, 0, 0], [1.42, -1.91, 0.3, 0, 0, 0], [1.3499999999999999, -1.91, 0.3, 0, 0, 0], [1.2799999999999998, -1.91, 0.3, 0, 0, 0], [1.2099999999999997, -1.91, 0.3, 0, 0, 0], [1.1399999999999997, -1.91, 0.3, 0, 0, 0], [1.0699999999999998, -1.91, 0.3, 0, 0, 0], [0.9999999999999998, -1.91, 0.3, 0, 0, 0], [0.9299999999999997, -1.91, 0.3, 0, 0, 0], [0.8599999999999999, -1.91, 0.3, 0, 0, 0], [0.6499999999999997, -1.91, 0.3, 0, 0, 0], [2.4, -1.8399999999999999, 0.3, 0, 0, 0], [2.05, -1.8399999999999999, 0.3, 0, 0, 0], [1.8399999999999999, -1.8399999999999999, 0.3, 0, 0, 0], [1.5599999999999998, -1.8399999999999999, 0.3, 0, 0, 0], [1.4899999999999998, -1.8399999999999999, 0.3, 0, 0, 0], [1.42, -1.8399999999999999, 0.3, 0, 0, 0], [1.3499999999999999, -1.8399999999999999, 0.3, 0, 0, 0], [1.2799999999999998, -1.8399999999999999, 0.3, 0, 0, 0], [1.2099999999999997, -1.8399999999999999, 0.3, 0, 0, 0], [1.1399999999999997, -1.8399999999999999, 0.3, 0, 0, 0], [1.0699999999999998, -1.8399999999999999, 0.3, 0, 0, 0], [0.9999999999999998, -1.8399999999999999, 0.3, 0, 0, 0], [0.9299999999999997, -1.8399999999999999, 0.3, 0, 0, 0], [0.8599999999999999, -1.8399999999999999, 0.3, 0, 0, 0], [0.6499999999999997, -1.8399999999999999, 0.3, 0, 0, 0], [2.4, -1.7699999999999998, 0.3, 0, 0, 0], [2.05, -1.7699999999999998, 0.3, 0, 0, 0], [1.8399999999999999, -1.7699999999999998, 0.3, 0, 0, 0], [1.5599999999999998, -1.7699999999999998, 0.3, 0, 0, 0], [1.4899999999999998, -1.7699999999999998, 0.3, 0, 0, 0], [1.42, -1.7699999999999998, 0.3, 0, 0, 0], [1.3499999999999999, -1.7699999999999998, 0.3, 0, 0, 0], [1.2799999999999998, -1.7699999999999998, 0.3, 0, 0, 0], [1.2099999999999997, -1.7699999999999998, 0.3, 0, 0, 0], [1.1399999999999997, -1.7699999999999998, 0.3, 0, 0, 0], [1.0699999999999998, -1.7699999999999998, 0.3, 0, 0, 0], [0.9999999999999998, -1.7699999999999998, 0.3, 0, 0, 0], [0.9299999999999997, -1.7699999999999998, 0.3, 0, 0, 0], [0.8599999999999999, -1.7699999999999998, 0.3, 0, 0, 0], [0.6499999999999997, -1.7699999999999998, 0.3, 0, 0, 0], [2.4, -1.6999999999999997, 0.3, 0, 0, 0], [2.05, -1.6999999999999997, 0.3, 0, 0, 0], [1.91, -1.6999999999999997, 0.3, 0, 0, 0], [1.8399999999999999, -1.6999999999999997, 0.3, 0, 0, 0], [1.5599999999999998, -1.6999999999999997, 0.3, 0, 0, 0], [1.4899999999999998, -1.6999999999999997, 0.3, 0, 0, 0], [1.42, -1.6999999999999997, 0.3, 0, 0, 0], [1.3499999999999999, -1.6999999999999997, 0.3, 0, 0, 0], [1.2799999999999998, -1.6999999999999997, 0.3, 0, 0, 0], [1.2099999999999997, -1.6999999999999997, 0.3, 0, 0, 0], [1.1399999999999997, -1.6999999999999997, 0.3, 0, 0, 0], [1.0699999999999998, -1.6999999999999997, 0.3, 0, 0, 0], [0.9999999999999998, -1.6999999999999997, 0.3, 0, 0, 0], [0.9299999999999997, -1.6999999999999997, 0.3, 0, 0, 0], [0.6499999999999997, -1.6999999999999997, 0.3, 0, 0, 0], [2.4, -1.63, 0.3, 0, 0, 0], [2.05, -1.63, 0.3, 0, 0, 0], [1.8399999999999999, -1.63, 0.3, 0, 0, 0], [1.7699999999999998, -1.63, 0.3, 0, 0, 0], [1.63, -1.63, 0.3, 0, 0, 0], [1.5599999999999998, -1.63, 0.3, 0, 0, 0], [1.4899999999999998, -1.63, 0.3, 0, 0, 0], [1.42, -1.63, 0.3, 0, 0, 0], [1.3499999999999999, -1.63, 0.3, 0, 0, 0], [1.2799999999999998, -1.63, 0.3, 0, 0, 0], [1.2099999999999997, -1.63, 0.3, 0, 0, 0], [1.1399999999999997, -1.63, 0.3, 0, 0, 0], [1.0699999999999998, -1.63, 0.3, 0, 0, 0], [0.9999999999999998, -1.63, 0.3, 0, 0, 0], [0.9299999999999997, -1.63, 0.3, 0, 0, 0], [0.8599999999999999, -1.63, 0.3, 0, 0, 0], [0.6499999999999997, -1.63, 0.3, 0, 0, 0], [2.4, -1.5599999999999998, 0.3, 0, 0, 0], [2.05, -1.5599999999999998, 0.3, 0, 0, 0], [1.8399999999999999, -1.5599999999999998, 0.3, 0, 0, 0], [1.6999999999999997, -1.5599999999999998, 0.3, 0, 0, 0], [1.4899999999999998, -1.5599999999999998, 0.3, 0, 0, 0], [1.42, -1.5599999999999998, 0.3, 0, 0, 0], [1.3499999999999999, -1.5599999999999998, 0.3, 0, 0, 0], [1.1399999999999997, -1.5599999999999998, 0.3, 0, 0, 0], [1.0699999999999998, -1.5599999999999998, 0.3, 0, 0, 0], [0.9999999999999998, -1.5599999999999998, 0.3, 0, 0, 0], [0.9299999999999997, -1.5599999999999998, 0.3, 0, 0, 0], [0.8599999999999999, -1.5599999999999998, 0.3, 0, 0, 0], [0.6499999999999997, -1.5599999999999998, 0.3, 0, 0, 0], [2.4, -1.4899999999999998, 0.3, 0, 0, 0], [2.05, -1.4899999999999998, 0.3, 0, 0, 0], [1.42, -1.4899999999999998, 0.3, 0, 0, 0], [1.1399999999999997, -1.4899999999999998, 0.3, 0, 0, 0], [0.9299999999999997, -1.4899999999999998, 0.3, 0, 0, 0], [0.8599999999999999, -1.4899999999999998, 0.3, 0, 0, 0], [0.6499999999999997, -1.4899999999999998, 0.3, 0, 0, 0], [2.4, -1.42, 0.3, 0, 0, 0], [2.05, -1.42, 0.3, 0, 0, 0], [1.42, -1.42, 0.3, 0, 0, 0], [1.1399999999999997, -1.42, 0.3, 0, 0, 0], [0.9299999999999997, -1.42, 0.3, 0, 0, 0], [0.6499999999999997, -1.42, 0.3, 0, 0, 0], [2.4, -1.3499999999999999, 0.3, 0, 0, 0], [2.05, -1.3499999999999999, 0.3, 0, 0, 0], [1.91, -1.3499999999999999, 0.3, 0, 0, 0], [1.4899999999999998, -1.3499999999999999, 0.3, 0, 0, 0], [1.42, -1.3499999999999999, 0.3, 0, 0, 0], [1.2099999999999997, -1.3499999999999999, 0.3, 0, 0, 0], [1.1399999999999997, -1.3499999999999999, 0.3, 0, 0, 0], [0.9999999999999998, -1.3499999999999999, 0.3, 0, 0, 0], [0.9299999999999997, -1.3499999999999999, 0.3, 0, 0, 0], [0.7899999999999998, -1.3499999999999999, 0.3, 0, 0, 0], [0.6499999999999997, -1.3499999999999999, 0.3, 0, 0, 0], [2.4, -1.2799999999999998, 0.3, 0, 0, 0], [2.05, -1.2799999999999998, 0.3, 0, 0, 0], [0.6499999999999997, -1.2799999999999998, 0.3, 0, 0, 0], [2.4, -1.2099999999999997, 0.3, 0, 0, 0], [2.33, -1.2099999999999997, 0.3, 0, 0, 0], [2.26, -1.2099999999999997, 0.3, 0, 0, 0], [2.19, -1.2099999999999997, 0.3, 0, 0, 0], [2.12, -1.2099999999999997, 0.3, 0, 0, 0], [2.05, -1.2099999999999997, 0.3, 0, 0, 0], [1.98, -1.2099999999999997, 0.3, 0, 0, 0], [1.91, -1.2099999999999997, 0.3, 0, 0, 0], [1.8399999999999999, -1.2099999999999997, 0.3, 0, 0, 0], [1.7699999999999998, -1.2099999999999997, 0.3, 0, 0, 0], [1.6999999999999997, -1.2099999999999997, 0.3, 0, 0, 0], [1.63, -1.2099999999999997, 0.3, 0, 0, 0], [1.5599999999999998, -1.2099999999999997, 0.3, 0, 0, 0], [1.4899999999999998, -1.2099999999999997, 0.3, 0, 0, 0], [1.42, -1.2099999999999997, 0.3, 0, 0, 0], [1.3499999999999999, -1.2099999999999997, 0.3, 0, 0, 0], [1.2799999999999998, -1.2099999999999997, 0.3, 0, 0, 0], [1.2099999999999997, -1.2099999999999997, 0.3, 0, 0, 0], [1.1399999999999997, -1.2099999999999997, 0.3, 0, 0, 0], [1.0699999999999998, -1.2099999999999997, 0.3, 0, 0, 0], [0.9999999999999998, -1.2099999999999997, 0.3, 0, 0, 0], [0.9299999999999997, -1.2099999999999997, 0.3, 0, 0, 0], [0.8599999999999999, -1.2099999999999997, 0.3, 0, 0, 0], [0.7899999999999998, -1.2099999999999997, 0.3, 0, 0, 0], [0.7199999999999998, -1.2099999999999997, 0.3, 0, 0, 0], [0.6499999999999997, -1.2099999999999997, 0.3, 0, 0, 0]];

orange_above=[[2.19, -2.33, 0.3, 0, 0, 0], [2.12, -2.33, 0.3, 0, 0, 0], [2.19, -2.26, 0.3, 0, 0, 0], [2.12, -2.26, 0.3, 0, 0, 0], [2.19, -2.19, 0.3, 0, 0, 0], [2.12, -2.19, 0.3, 0, 0, 0], [2.19, -2.12, 0.3, 0, 0, 0], [2.12, -2.12, 0.3, 0, 0, 0], [2.19, -2.05, 0.3, 0, 0, 0], [2.12, -2.05, 0.3, 0, 0, 0], [2.19, -1.98, 0.3, 0, 0, 0], [2.12, -1.98, 0.3, 0, 0, 0], [2.19, -1.91, 0.3, 0, 0, 0], [2.12, -1.91, 0.3, 0, 0, 0], [2.19, -1.8399999999999999, 0.3, 0, 0, 0], [2.12, -1.8399999999999999, 0.3, 0, 0, 0], [2.19, -1.7699999999999998, 0.3, 0, 0, 0], [2.12, -1.7699999999999998, 0.3, 0, 0, 0], [2.19, -1.6999999999999997, 0.3, 0, 0, 0], [2.12, -1.6999999999999997, 0.3, 0, 0, 0], [2.19, -1.63, 0.3, 0, 0, 0], [2.12, -1.63, 0.3, 0, 0, 0], [2.19, -1.5599999999999998, 0.3, 0, 0, 0], [2.12, -1.5599999999999998, 0.3, 0, 0, 0], [2.19, -1.4899999999999998, 0.3, 0, 0, 0], [2.12, -1.4899999999999998, 0.3, 0, 0, 0], [2.19, -1.42, 0.3, 0, 0, 0], [2.12, -1.42, 0.3, 0, 0, 0], [2.19, -1.3499999999999999, 0.3, 0, 0, 0], [2.12, -1.3499999999999999, 0.3, 0, 0, 0], [2.19, -1.2799999999999998, 0.3, 0, 0, 0], [2.12, -1.2799999999999998, 0.3, 0, 0, 0]];


origine_table = [-2.4,-2.4,0.2,0,0,0];
cube_dimensions = [0.06,0.06,0.06];
width_offset = 0.01;
length_offset = 0.01;
speed = 100;
end_test = 0;
red_end = 0;
yelow_end = 0;
green_end = 0;
orange_end = 0;
red_basket = [0,-0.7,0.06,0,0,0];
red_basket_above = [0,-0.7,0.3,0,0,0];
orange_basket = [0,-2.2,0.06,0,0,0];
orange_basket_above = [0,-2.2,0.3,0,0,0];
yellow_basket = [0,-1.2,0.06,0,0,0];
yellow_basket_above = [0,-1.2,0.3,0,0,0];
green_basket = [0,-1.7,0.06,0,0,0];
green_basket_above = [0,-1.7,0.3,0,0,0];


if (clientID > -1)
    disp('connected to remote API server');
    
    %object handles
    [res,target] = vrep.simxGetObjectHandle(clientID,'Target',vrep.simx_opmode_blocking);
    [res,target1] = vrep.simxGetObjectHandle(clientID,'Target1#0',vrep.simx_opmode_blocking);
    [res,VisionSensor] = vrep.simxGetObjectHandle(clientID,'Vision_sensor',vrep.simx_opmode_oneshot_wait);
    [~,Suc_pad] = vrep.simxGetObjectHandle(clientID,'suctionPad', vrep.simx_opmode_blocking);
    [~,Suc_pad1] = vrep.simxGetObjectHandle(clientID,'suctionPad#0', vrep.simx_opmode_blocking);
    
    fposition3 = [-2.4,-2.4,0.2,0,0,0];    % above pickup position of first robot
    fposition4 = [-2.4,-2.4,0.06,0,0,0];    % pickup position of first robot
    fposition5 = [0,0,0.2,0,0,0];         % above place position of first robot
    fposition6 = [0,0,0.09,0,0,0];         % place position of first robot
    
    ffposition3 = [];    % above pickup position of 2nd robot
    ffposition4 = [];  % pickup position of 2nd robot
    ffposition5 = [];         % above place position of 2nd robot
    ffposition6 = [];         % place position of 2nd robot
    
    

    while (end_test==0)
        
        %1st robot picking
        ControlSuctionPad(clientID,0);
        moveL(clientID, target, fposition3);
            %COLOR DETECTION START
        color=0;
        while(color==0)
            [returnCode,detectionState,auxData,auxPacketInfo]=vrep.simxReadVisionSensor(clientID,VisionSensor,vrep.simx_opmode_streaming);
            %display(y)
            %display(auxData);
            if isempty(auxData)
                disp("Empty");
            else
                red=auxData(12)*100;
                green=auxData(13)*100;
                blue=auxData(14)*100;
                display(red);
                display(green);
                display(blue);
                color=0;
                if(red>95 && blue<12 && green <12)
                    color=1; %red
                elseif(red>95 && blue<12 && green <48 && green >35)
                    color=2; %orange
                elseif(red>95 && blue<12 && green <92 && green >80)
                    color=3; %yellow
                elseif(red<12 && blue<20 && green >95)
                    color=4; %green
                end
                disp(color);
                if(color==1)
                    fposition5 = red_basket_above;
                    fposition6 = red_basket;
                elseif(color==2)
                    fposition5 = orange_basket_above;
                    fposition6 = orange_basket;
                elseif(color==3)
                    fposition5 = yellow_basket_above;
                    fposition6 = yellow_basket;
                elseif(color==4)
                    fposition5 = green_basket_above;
                    fposition6 = green_basket;
                end
            end  
        end
            %COLOR DETECTION STOP
        moveL(clientID, target, fposition4);
        ControlSuctionPad(clientID,1);
        moveL(clientID, target, fposition3);
        %1st robot placing
        moveL(clientID, target, fposition5);
        moveL(clientID, target, fposition6);
        ControlSuctionPad(clientID,0);
        moveL(clientID, target, fposition5);
        [end_test,fposition4 , fposition3, fposition5] = pick(origine_table, 18, 26, 1 , cube_dimensions,width_offset, length_offset, fposition4 , fposition3, fposition5);
        moveL(clientID, target, fposition3);
        
        %2nd robot picking and placing positions assigning
        if (color==1) 
            if isempty(red_place)
                red_end = 1;
            else
                ffposition3 = red_basket_above;    % above pickup position
                ffposition4 = red_basket;
                ffposition5 = red_above(1:6);         % above place position
                ffposition6 = red_place(1:6);
                red_place(1:6) = []; 
                red_above(1:6) = [];
            end 
        elseif (color==3) 
            if isempty(yellow_place)
                yellow_end = 1;
            else
                ffposition3 = yellow_basket_above;    % above pickup position
                ffposition4 = yellow_basket;
                ffposition5 = yellow_above(1:6);         % above place position
                ffposition6 = yellow_place(1:6);
                yellow_place(1:6) = []; 
                yellow_above(1:6) = [];
            end 
        elseif (color==4) 
            if isempty(green_place)
                green_end = 1;
            else
                ffposition3 = green_basket_above;    % above pickup position
                ffposition4 = green_basket;
                ffposition5 = green_above(1:6);         % above place position
                ffposition6 = green_place(1:6);
                green_place(1:6) = []; 
                green_above(1:6) = [];
            end 
        elseif (color==2) 
            if isempty(orange_place)
                orange_end = 1;
            else
                ffposition3 = orange_basket_above;    % above pickup position
                ffposition4 = orange_basket;
                ffposition5 = orange_above(1:6);         % above place position
                ffposition6 = orange_place(1:6);
                orange_place(1:6) = []; 
                orange_above(1:6) = [];
            end
        end
        %2nd robot picking
        ControlSuctionPad2(clientID,0);
        moveL(clientID, target1, ffposition3);
        moveL(clientID, target1, ffposition4);
        ControlSuctionPad2(clientID,1);
        moveL(clientID, target1, ffposition3);
        
        %2nd robot placing
        moveL(clientID, target1, ffposition5);
        moveL(clientID, target1, ffposition6);
        ControlSuctionPad2(clientID,0);
        moveL(clientID, target1, ffposition5);
        
        %ending loop
        if (green_end ==1 && red_end ==1 && yellow_end ==1 && orange_end ==1 )
            end_test = 1;
        end
    
    end
vrep.delete(); %calling destructor
disp('program ended');
end

%function to move the target linearly to a given position

function moveL(clientID, target, pos)
    vrep = remApi('remoteApi');
    %get target position and orientation
    [r,p] = vrep.simxGetObjectPosition(clientID, target, -1, vrep.simx_opmode_blocking);
    [r,o] = vrep.simxGetObjectOrientation(clientID, target, -1, vrep.simx_opmode_blocking);
    
    %to get to desired orientation we have two possiblities (the positive or negative direction. So we need to
    % add these lines to calculate the shortest one:

    for i = 1 : 3
        if ((abs(pos(i+3)-o(i)) > pi) && (o(i) < 0))
            o(i) = o(i) + 2*pi;
        elseif ((abs(pos(i+3) - o(i)) > pi) && (o(i) > 0))
            o(i) = o(i) - 2*pi;
        end
    end
    old_pos = [p o];
    delta_pos = pos - old_pos;
    distance = norm(delta_pos);
    samples_number = round(distance*4);
    for i = 1 : samples_number
        intermediate_pos = old_pos + (delta_pos/samples_number);
        tic;
        vrep.simxSetObjectPosition(clientID, target, -1, intermediate_pos, vrep.simx_opmode_blocking);
        vrep.simxSetObjectOrientation(clientID, target, -1, intermediate_pos(4:6), vrep.simx_opmode_blocking);
        old_pos = intermediate_pos;
    end
end

%fuction to control first robot suction pad

function ControlSuctionPad(clientID,status)
    vrep = remApi('remoteApi');
    
    % the command on the status determines whether the pad is active or not
    % status = 1 --> activate
    % status = 0 --> deactivate
    vrep.simxSetIntegerSignal(clientID,'suctionPad_active',status,vrep.simx_opmode_oneshot)
end

%%fuction to control first robot suction pad

function ControlSuctionPad2(clientID,status)
    vrep = remApi('remoteApi');
    
    % the command on the status determines whether the pad is active or not
    % status = 1 --> activate
    % status = 0 --> deactivate
    vrep.simxSetIntegerSignal(clientID,'suctionPad#0_active',status,vrep.simx_opmode_oneshot)
end

%fuction to assign positions of randomly coloured boxes

function [end_test, pick_pos, above_pick_pos, above_pos] = pick(origine_table, length_nbre, width_nbre, height_nbre, cube_dimensions,width_offset, length_offset, pick_pos, above_pick_pos,above_pos)
    end_test = 0;
    persistent w l h %declare static variables
    if isempty(w)
        w = 1;
    end
    if isempty(l)
        l = 1;
    end
    if isempty(h)
        h = 1;
    end 
    if (w < width_nbre)
        pick_pos(1) = pick_pos(1) + cube_dimensions(2) + width_offset;
        above_pick_pos(1) = above_pick_pos(1) + cube_dimensions(2) + width_offset;
        w = w +1;
    else
        pick_pos(1) = origine_table(1);
        above_pick_pos(1) = origine_table(1);
        w = 1;
        if (l < length_nbre)
            pick_pos(2) = pick_pos(2) + cube_dimensions(1) + length_offset;
            above_pick_pos(2) = above_pick_pos(2) + cube_dimensions(1) + length_offset;
            l = l +1;
            else
                pick_pos(2) = origine_table(2);
                above_pick_pos(2) = origine_table(2);
                l = 1;
                if (h < height_nbre)
                    pick_pos(3) = pick_pos(3) + cube_dimensions(3);
                    above_pick_pos(3) = above_pick_pos(3) + cube_dimensions(3);
                    above_pos(3) = above_pos(3) + cube_dimensions(3);
                    h = h +1;
                else
                    %end_test = 1;
                end
        end
    end

end
